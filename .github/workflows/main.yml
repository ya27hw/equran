name: Build and Deploy Flutter App

# Trigger the workflow whenever code is pushed or a pull request is made
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build for Android, Windows, and Linux
    runs-on: ${{ matrix.os }}  # Run on different OS environments

    strategy:
      matrix:
        os: [ ubuntu-22.04 ]
        # Include other operating systems if needed

    steps:
      - uses: actions/checkout@v4  # Check out the code
      - uses: subosito/flutter-action@v2.13.0
        with:
          channel: 'stable'
          cache: true
      - run: flutter --version

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # Or another distribution like 'zulu'
          java-version: '12.x'
          cache: gradle

      - name: Configure Flutter
        run: flutter config --enable-windows-desktop --enable-linux-desktop --enable-macos-desktop

      - name: Get Dependencies
        run: flutter pub get

      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: echo $KEYSTORE_BASE64 | base64 --decode > android/app/keystore.jks

      - name: Configure Signing
        env:
          PROPERTIES_PATH: "./android/key.properties"
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo keyPassword=$KEY_PASSWORD > $PROPERTIES_PATH
          echo storePassword=$KEYSTORE_PASSWORD >> $PROPERTIES_PATH
          echo keyAlias=$KEY_ALIAS >> $PROPERTIES_PATH

      - name: Build Android Release APK
        run: flutter build apk --release

      #      - name: Build Windows App
      #        if: matrix.os == 'windows-latest' # Build Windows on Windows
      #        run: flutter build windows
      #
      #      - name: Build Linux App
      #        if: matrix.os == 'ubuntu-latest' # Build Linux on macOS
      #        run: |
      #          sudo apt-get update -y
      #          sudo apt-get install -y ninja-build libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-bad1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-good1.0-dev libunwind-dev
      #          flutter build linux

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: |
            build/app/outputs/flutter-apk/app-release.apk # Android APK
      #            build/windows/runner/Release/*.exe         # Windows executable
      #            build/linux/x64/release/bundle/*             # Linux files

      - name: Create Release
        id: create_release
        uses: actions/create-release@1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-release.apk # Android
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive




